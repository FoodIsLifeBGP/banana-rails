version: 2 
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: rubylang/ruby:2.6.3-bionic
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: 127.0.0.1
          RAILS_ENV: test
      - image: circleci/postgres:12 # database image
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: backend_test
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      
      # ------------------------------------------------------------------------------
      # ADDITIONAL IMAGE SETUP:
      # The image being used in this project is not being pushed to the registry.
      # For the time being, the additional steps are taken from Dockerfile to 
      # make tests work. Please remove the steps when Docker Image is uploaded 
      # to registry

      - run:
          name: steps from Dockerfile !!DELETE WHEN IMAGE IS UPLOADED TO DOCKER HUB!!
          command: apt-get update -qq && apt-get -y install postgresql-client libpq5 libpq-dev && apt-get install wget
      - run:
          name: Install Dockerize !!DELETE WHEN IMAGE IS UPLOADED TO DOCKER HUB!!
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz 
            tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
            rm dockerize-linux-amd64-v0.6.1.tar.gz
      # ------------------------------------------------------------------------------

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - rails-bundle-{{ checksum "Gemfile.lock" }}-{{ arch}}
            - rails-bundle-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: rails-bundle-{{ checksum "Gemfile.lock" }}-{{ arch}}
          paths:
            - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Running minitests
          command: bundle exec rake test

      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results

